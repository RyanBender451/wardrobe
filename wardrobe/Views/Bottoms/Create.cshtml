@model wardrobe.Models.Bottom

@{
    ViewBag.Title = "Create";
}

<h2 class="h2hero">Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <!--Updated form-->
    <div class="form-horizontal former">
        <h4 class="h4hero">Bottom</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BottomName, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BottomName, new { htmlAttributes = new { @class = "form-control texth" } })
                @Html.ValidationMessageFor(model => model.BottomName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BottomPhoto, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BottomPhoto, new { htmlAttributes = new { @class = "form-control texth", @Value = "~/Content/images/goldpant.png" } })
                @Html.ValidationMessageFor(model => model.BottomPhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BottomType, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BottomType, new { htmlAttributes = new { @class = "form-control texth" } })
                @Html.ValidationMessageFor(model => model.BottomType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BottomColor, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BottomColor, new { htmlAttributes = new { @class = "form-control texth" } })
                @Html.ValidationMessageFor(model => model.BottomColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BottomSeason, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BottomSeason, new { htmlAttributes = new { @class = "form-control texth" } })
                @Html.ValidationMessageFor(model => model.BottomSeason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BottomOccasion, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BottomOccasion, new { htmlAttributes = new { @class = "form-control texth" } })
                @Html.ValidationMessageFor(model => model.BottomOccasion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<!--button back to index-->
<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = " btn btn-primary", role = "button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
