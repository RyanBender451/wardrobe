@model wardrobe.Models.Accessory

@{
    ViewBag.Title = "Create";
}

<h2 class="h2hero">Create</h2>

@* Creation of the Accessories, uses a customized form *@
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
   
    // Form has customized labels and editsbars
    <!--updated the form looks-->
    <div class="form-horizontal former">
        <h4 class="h4hero">Accessory</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AccessoryName, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccessoryName, new { htmlAttributes = new { @class = "form-control texth"} })
                @Html.ValidationMessageFor(model => model.AccessoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccessoryPhoto, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccessoryPhoto, new { htmlAttributes = new { @class = "form-control texth", @Value = "~/Content/images/goldh.png" } })
                @Html.ValidationMessageFor(model => model.AccessoryPhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccessoryType, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccessoryType, new { htmlAttributes = new { @class = "form-control texth" } })
                @Html.ValidationMessageFor(model => model.AccessoryType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccessoryColor, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccessoryColor, new { htmlAttributes = new { @class = "form-control texth" } })
                @Html.ValidationMessageFor(model => model.AccessoryColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccessorySeason, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccessorySeason, new { htmlAttributes = new { @class = "form-control texth" } })
                @Html.ValidationMessageFor(model => model.AccessorySeason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccessoryOccasion, htmlAttributes: new { @class = "control-label col-md-2 labh" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccessoryOccasion, new { htmlAttributes = new { @class = "form-control texth" } })
                @Html.ValidationMessageFor(model => model.AccessoryOccasion, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Create Button *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
 
<div>
    @*return to index*@
    @Html.ActionLink("Back to List", "Index", null, new { @class = " btn btn-primary", role = "button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
